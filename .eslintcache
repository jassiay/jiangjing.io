[{"/Users/jiangj/MyContents/jiangjing.io/src/reportWebVitals.js":"1","/Users/jiangj/MyContents/jiangjing.io/src/App.js":"2","/Users/jiangj/MyContents/jiangjing.io/src/index.js":"3","/Users/jiangj/MyContents/jiangjing.io/src/components/InfoCard.js":"4","/Users/jiangj/MyContents/jiangjing.io/src/components/PrimaryCard.js":"5","/Users/jiangj/MyContents/jiangjing.io/src/components/ProjectCard.js":"6","/Users/jiangj/MyContents/jiangjing.io/src/components/SectionCard.js":"7","/Users/jiangj/MyContents/jiangjing.io/src/components/BlankCard.js":"8","/Users/jiangj/MyContents/jiangjing.io/src/components/Footer.js":"9","/Users/jiangj/MyContents/jiangjing.io/src/components/Header.js":"10"},{"size":362,"mtime":1607339473269,"results":"11","hashOfConfig":"12"},{"size":1335,"mtime":1607529835933,"results":"13","hashOfConfig":"12"},{"size":478,"mtime":1607415167112,"results":"14","hashOfConfig":"12"},{"size":1957,"mtime":1607529813973,"results":"15","hashOfConfig":"12"},{"size":764,"mtime":1607520685309,"results":"16","hashOfConfig":"12"},{"size":4972,"mtime":1607530613181,"results":"17","hashOfConfig":"12"},{"size":2595,"mtime":1607530660945,"results":"18","hashOfConfig":"12"},{"size":200,"mtime":1607502889272,"results":"19","hashOfConfig":"12"},{"size":352,"mtime":1607522197117,"results":"20","hashOfConfig":"12"},{"size":324,"mtime":1607504409552,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"oj0mgj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jiangj/MyContents/jiangjing.io/src/reportWebVitals.js",[],["45","46"],"/Users/jiangj/MyContents/jiangjing.io/src/App.js",["47","48"],"/Users/jiangj/MyContents/jiangjing.io/src/index.js",[],["49","50"],"/Users/jiangj/MyContents/jiangjing.io/src/components/InfoCard.js",[],"/Users/jiangj/MyContents/jiangjing.io/src/components/PrimaryCard.js",["51"],"/Users/jiangj/MyContents/jiangjing.io/src/components/ProjectCard.js",["52","53"],"import React, {useState} from 'react';\nimport '../styles.css';\n\nimport project1 from '../assets/project_1.png';\nimport project3 from '../assets/project_3.png';\n\nconst styles = {\n    projNum: {\n        position: 'absolute',\n        margin: 'auto',\n        left: 0,\n        top: 0,\n        zIndex: 10,\n    },\n    abstract: {\n        fontFamily: `'DM Serif Display', serif`,\n    },\n    cursorStyle: {\n        cursor: 'pointer'\n    }\n};\n\nfunction ProjectManhattan() {\n    return (\n        <div>\n            <h3 style={styles.projNum}><span style={styles.projNumSpan}>1.Recreate-Manhattan: Reimagine a City using Deep Learning</span></h3>\n            <img className=\"project-img\" src={project1} alt=\"Project 1\" />\n            <div className=\"overlay\">\n                <h3 className=\"title-placeholder\">1.Recreate-Manhattan: Reimagine a City using Deep Learning</h3>\n                <p className=\"info-paragraph\">\n                    Curated a dataset consisting of 400 trios of images containing outline, layout, and depth information of the city blocks\n                    in Manhattan.\n                </p>\n                <p className=\"info-paragraph\">\n                    Used the city block depth dataset as ground truth and trained a Pix2Pix Generative Adversarial Networks model that\n                    can generate new depth maps given customized block layout inputs.\n                    Applied this model on various geometric styles to convey innovative concepts of modern architecture and city\n                    planning.\n                </p>\n                <p className=\"info-paragraph project-link\" onClick={()=> window.open(\"https://recreate-manhattan.jiangjing.io/\", \"_blank\")}>\n                    Visit <br />\n                    <b>https://recreate-manhattan.jiangjing.io/</b>\n                </p>\n            </div>\n            \n        </div>\n    )\n}\n\nfunction ProjectFishPomodoro() {\n\n    return (\n        <div>\n            <h3 style={styles.projNum}><span style={styles.projNumSpan}>2.Pomodoro App with Fish-Collecting Gamification</span></h3>\n            <div className=\"timer-emoji\">&#x23F1;\n                <p className=\"fish-emoji-1\">&#x1F41F;</p>\n                <p className=\"fish-emoji-2\">&#x1F420;</p>\n            </div>\n            <div className=\"overlay\">                \n                <h3 className=\"title-placeholder\">2.Pomodoro App with Fish-Collecting Gamification</h3>\n                <p className=\"info-paragraph\">\n                Following Agile Development approaches, developed a smartphone application that features Pomodoro studying\n                techniques, with gamification that enables users to collect animated fish as rewards when they finish studying cycles.\n                </p>\n                <p className=\"info-paragraph\">\n                Used React Native as framework, together with Expo. Used Google Firebase for user authentication and database.\n                </p>\n                <p className=\"info-paragraph project-link\" onClick={()=> window.open(\"https://tempo-873ec.web.app/\", \"_blank\")}>\n                    Prototype deployed on <br />\n                    <b>https://tempo-873ec.web.app/</b>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nfunction ProjectStoryGen() {\n    return (\n        <div>\n            {/* <h3 style={styles.projNum}><span style={styles.projNumSpan}>3.</span></h3> */}\n            {/* <img className=\"project-3-img\" src={project3} alt=\"Project 3\" /> */}\n            <h3>3.Multimodal Story Generation on Plural Images</h3>\n            <p className=\"info-paragraph paper-paragraph\">\n                <span style={styles.abstract}>Abstract&nbsp;</span>Traditionally, the text generation models take in a sequence of text as input, and iteratively generate\n                the next most probable word using pre-trained parameters. In this work, we propose the architecture\n                to use images instead of text as the input of the text generation model, called StoryGen. In the\n                architecture, we design a Relational Text Data Generator algorithm that relates different features from\n                multiple images. The output samples from the model demonstrate the ability to generate meaningful\n                paragraphs of text containing the extracted features from the input images.\n            </p>\n            <p className=\"info-paragraph project-link paper-paragraph\" onClick={()=> window.open(\"https://arxiv.org/abs/2001.10980\", \"_blank\")}>\n                Report on this project available on: <br />\n                <b>https://arxiv.org/abs/2001.10980</b>\n            </p>\n        </div>\n    )\n}\n\nfunction ProjectCard({proj}) {\n    return (\n        <div className=\"card-style card-hover\">\n            {proj === \"recreate-manhattan\" && <ProjectManhattan />}\n            {proj === \"fish-pomodoro\" && <ProjectFishPomodoro />}\n            {proj === \"story-gen\" && <ProjectStoryGen />}\n        </div>\n    );\n}\n\n\nexport default ProjectCard;","/Users/jiangj/MyContents/jiangjing.io/src/components/SectionCard.js",["54","55","56"],"/Users/jiangj/MyContents/jiangjing.io/src/components/BlankCard.js",[],"/Users/jiangj/MyContents/jiangjing.io/src/components/Footer.js",[],"/Users/jiangj/MyContents/jiangjing.io/src/components/Header.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":25,"nodeType":"63","messageId":"64","endLine":2,"endColumn":28},{"ruleId":"61","severity":1,"message":"65","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":14},{"ruleId":"57","replacedBy":"66"},{"ruleId":"59","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":28,"column":13,"nodeType":"70","endLine":28,"endColumn":90},{"ruleId":"61","severity":1,"message":"71","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"72","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":56,"column":65,"nodeType":"75","endLine":56,"endColumn":80},{"ruleId":"73","severity":1,"message":"74","line":57,"column":54,"nodeType":"75","endLine":57,"endColumn":69},{"ruleId":"73","severity":1,"message":"74","line":67,"column":33,"nodeType":"75","endLine":67,"endColumn":48},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.",["76"],["77"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'project3' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]